version: '1.0'
mode: parallel
stages:
- Build & Test
- Release
steps:
  calculate_version:
    title: 'Calculate latest version'
    image: codefresh/cli
    commands:
        - export VERSION=$(cat VERSION)
        - cf_export VERSION
    when:
      steps:
      - name: main_clone
        on:
        - success
 
  create_git_tag:
    title: Push tag to git
    image: codefresh/cli
    stage: Release
    commands:
    - export OLD_ORIGIN=$(git remote get-url origin)
    - git remote rm origin
    - git remote add origin https://${{GITHUB_TOKEN}}@github.com/olegsu/timewatch.git
    - git tag v${{VERSION}}
    - git push --tags
    - git remote rm origin
    - git remote add origin $OLD_ORIGIN
    
    fail_fast: false
    when:
      steps:
      - name: calculate_version
      - name: main_clone
      branch:
        only:
        - master


  release_binaries:
    title: Create release in Github with merlin CLI
    image: goreleaser/goreleaser
    stage: Release
    fail_fast: false
    commands:
    - go mod download
    - goreleaser release -f .goreleaser.yml --rm-dist
    when:
      steps:
      - name: create_git_tag
        on:
        - finished
      branch:
        only:
        - master

  build:
    title: "Build docker image with timewatch binary"
    type: build
    stage: Build & Test
    tag: ${{CF_BRANCH_TAG_NORMALIZED}}
    image_name: olsynt/timewatch
    when:
      steps:
      - name: release_binaries
        on:
        - success


  push_latest:
    title: "Pushing image to registry with latest tag"
    stage: Release
    type: push
    candidate: ${{build}}
    tags:
    - latest
    - ${{VERSION}}
    registry: "dockerhub"
    when:
      branch:
        only:
        - master
      steps:
        - name: build
          on:
          - success
